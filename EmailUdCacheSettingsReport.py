import IfxPyDbi as dbapi2
import smtplib
import csv

print('Going to create Informix Database connection with Connection String SERVER=udqa;DB_LOCALE=en_US.57372;DATABASE=dadt;HOST=dhscalqaldbm01a.asp.dhisco.com;SERVICE=40013;UID=web;PWD=5kywalk3r;')
# Informix Database Connection String
ConStr = "SERVER=udqa;DB_LOCALE=en_US.57372;DATABASE=dadt;HOST=dhscalqaldbm01a.asp.dhisco.com;SERVICE=40013;UID=web;PWD=5kywalk3r;"

# Establish Database connection with Informix Database.
try:
    print('Going to Connect to Informix DB.')
    conn = dbapi2.connect(ConStr, "", "")
    print('Connected Successfylly!!')
except Exception as e:
    print(e)
    print('Connection failed!!')

#Create Cursor
print('Creating cursor.')
cur = conn.cursor()

# Prepare Query type 1
#query = "select a.*, b.min_lead_days, b.max_lead_days, b.cache_stale_time_value, b.cache_stale_time_units \
#from ud_cache_chain_config a, ud_cache_stale_time_config b \
#where a.chain = b.chain \
#and a.config_level = b.config_level \
#and a.affiliates = b.affiliates \
#and a.properties = b.properties \
#and a.chain in ('MC','BG','BR','CY','DP','ET','FN','RC','RZ','TO','XV','VC','AK','EB','AR','GE','OX','P2','DE','FP','TX','SI','WI','WH','MD','AL','EL','LC','XR','GX')"

#Prepare Query type 2
#query = "select a.*, b.min_lead_days, b.max_lead_days, b.cache_stale_time_value, b.cache_stale_time_units \
#from ud_cache_chain_config a, ud_cache_stale_time_config b \
#where a.chain = b.chain \
#and a.config_level = b.config_level \
#and a.affiliates = b.affiliates \
#and a.properties = b.properties  \
#and a.affiliates like '%00%'"

#Prepare Query type 3
query = "select a.*, b.min_lead_days, b.max_lead_days, b.cache_stale_time_value, b.cache_stale_time_units \
from ud_cache_chain_config a, ud_cache_stale_time_config b \
where a.chain = b.chain \
and a.config_level = b.config_level \
and a.affiliates = b.affiliates \
and a.properties = b.properties"


try:
 print('Going to execute main Select statement.')
 cur.execute(query)
 print ('Fetch Successful!!')
 rows = cur.fetchall()

 #Start Preparing csv file.
 column_names = [i[0] for i in cur.description]
 fp = open('UdCacheSettingsReport.csv', 'w')
 myFile = csv.writer(fp)
 myFile.writerow(column_names)
 myFile.writerows(rows)
 fp.close()

 # import the corresponding modules
 from email import encoders
 from email.mime.base import MIMEBase
 from email.mime.multipart import MIMEMultipart
 from email.mime.text import MIMEText

 port = 2525
 smtp_server = "smtp.ad.dhisco.com"
 login = "1a2b3c4d5e6f7g"  # paste your login generated by Mailtrap
 password = "1a2b3c4d5e6f7g"  # paste your password generated by Mailtrap

 subject = "An example of boarding pass"
 sender_email = "vaneet.kataria@rategain.com"
 receiver_email = "vaneetkataria54@gmail.com"

 message = MIMEMultipart()
 message["From"] = sender_email
 message["To"] = receiver_email
 message["Subject"] = subject

 # Add body to email
 body = "Please Find Attached the UD Cache Settings Report."
 message.attach(MIMEText(body, "plain"))

 filename = "UdCacheSettingsReport.csv"
 # Open PDF file in binary mode

 # We assume that the file is in the directory where you run your Python script from
 with open(filename, "rb") as attachment:
     # The content type "application/octet-stream" means that a MIME attachment is a binary file
     part = MIMEBase("application", "octet-stream")
     part.set_payload(attachment.read())

 # Encode to base64
 encoders.encode_base64(part)

 # Add header
 part.add_header(
     "Content-Disposition",
     f"attachment; filename= {filename}",
 )

 # Add attachment to your message and convert it to string
 message.attach(part)
 text = message.as_string()

 # send your email
 print('Going to send email.')
 with smtplib.SMTP(smtp_server, 25) as server:
     server.sendmail(
         sender_email, receiver_email, text
     )
 print('Sent!!')
except Exception as e:
 print(e)
 print('Fetch failed!!')